{"ast":null,"code":"var _jsxFileName = \"/Users/takaya/workspace/react-guide-material/12_hooks_p2/src/075_practice_customHook/start/Example.js\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8A18\\u8FF0\\u3092\\u5909\\u66F4\\u3057\\u3001\\u5B8C\\u6210\\u30B3\\u30FC\\u30C9\\u3068\\u540C\\u3058\\u72B6\\u614B\\u306B\\u306A\\u308B\\u3088\\u3046\\u306B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002 start\\u30D5\\u30A9\\u30EB\\u30C0\\u306E\\u4E2D\\u306Bhooks.js\\u3068\\u3044\\u3046\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u4F5C\\u6210\\u3057\\u305D\\u306E\\u4E2D\\u3067useCount\\u3068\\u3044\\u3046\\u30AB\\u30B9\\u30BF\\u30E0\\u30D5\\u30C3\\u30AF\\u3092\\u4F5C\\u6210\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Counts: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {},\n      children: \"Count Up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["Example"],"sources":["/Users/takaya/workspace/react-guide-material/12_hooks_p2/src/075_practice_customHook/start/Example.js"],"sourcesContent":["const Example = () => {\n  return (\n    <>\n      <h3>練習問題</h3>\n      <p>\n        記述を変更し、完成コードと同じ状態になるようにしてください。\n        startフォルダの中にhooks.jsというファイルを作成しその中でuseCountというカスタムフックを作成してください。\n      </p>\n      <div>Counts: {}</div>\n      <button onClick={() => {}}>Count Up!</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;AAAA,MAAMA,OAAO,GAAG,MAAM;EACpB,oBACE;IAAA,wBACE;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACb;MAAA,UAAG;IAGH;MAAA;MAAA;MAAA;IAAA,QAAI,eACJ;MAAA,UAAK;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ,eACrB;MAAQ,OAAO,EAAE,MAAM,CAAC,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAC5C;AAEP,CAAC;AAAC,KAZIA,OAAO;AAcb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}